if n <= 1 GOTO L0
GOTO L1
LABEL L0:
GOTO L2
LABEL L1:
LABEL L2:
t0 = n - 1
pivot = d[t0]
left = 0
LABEL L3:
if left <= right GOTO L4
GOTO L5
LABEL L4:
if d[left] <= pivot GOTO L5
GOTO L6
LABEL L5:
t1 = left + 1
left = t1
GOTO L7
LABEL L6:
LABEL L7:
if d[right] > pivot GOTO L8
GOTO L9
LABEL L8:
t2 = right - 1
right = t2
GOTO L10
LABEL L9:
LABEL L10:
d[-1] = temp
d[-1] = d[left]
d[1] = temp
t3 = left + 1
left = t3
t4 = right - 1
right = t4
JUMP to L9

LABEL L11:
t5 = n - 1
d[-1] = temp1
t6 = n - 1
d[-1] = d[left]
d[2] = temp1
Arg: d[9]
Arg: n
Arg: 0
Arg: left
Func-Call: hello
Arg: d[9]
Arg: n
t7 = left + 1
Arg: t7
Arg: right
Func-Call: hello
a[0] = 1
a[1] = 2
a[2] = 3
a[3] = 5
t8 = 6 + 1
a[4] = t8
Arg: a[9]
Arg: k
Arg: 0
Arg: 3
Func-Call: hello
