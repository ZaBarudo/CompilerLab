Terminals unused in grammar

    RECEIVE
    SHORT_VAR
    VARIADIC_PARAM
    SELECTOR
    LOGICAL_NOT
    WHILE
    IMPORT
    APPEND
    LEN
    PRINT
    CHAN
    CONST
    DEFER
    FALLTHROUGH
    GO
    GOTO
    INTERFACE
    MAP
    RANGE
    SELECT
    STRUCT
    TYPE
    LSQPAREN
    RSQPAREN
    COMMA
    COLON
    MULTI_LINE_COMMENT


Rules useless in parser due to conflicts

   82 switch_case: CASE expression_list ':' statement_list
   83            | DEFAULT ':' statement_list


State 16 conflicts: 11 shift/reduce
State 17 conflicts: 11 shift/reduce
State 18 conflicts: 1 shift/reduce
State 22 conflicts: 11 shift/reduce
State 23 conflicts: 11 shift/reduce
State 25 conflicts: 11 shift/reduce
State 29 conflicts: 11 shift/reduce
State 30 conflicts: 11 shift/reduce
State 31 conflicts: 11 shift/reduce
State 32 conflicts: 11 shift/reduce
State 33 conflicts: 11 shift/reduce
State 167 conflicts: 11 shift/reduce
State 172 conflicts: 11 shift/reduce
State 175 conflicts: 11 shift/reduce, 3 reduce/reduce
State 176 conflicts: 11 shift/reduce, 3 reduce/reduce


Grammar

    0 $accept: program $end

    1 program: PackageClause function_declaration

    2 PackageClause: PACKAGE IDENTIFIER

    3 declaration: VAR IDENTIFIER type
    4            | VAR IDENTIFIER type ASSIGN expression
    5            | VAR IDENTIFIER ASSIGN expression

    6 function_declaration: FUNCTION IDENTIFIER LPAREN RPAREN block_stmt

    7 thing: IDENTIFIER
    8      | literal

    9 term: IDENTIFIER
   10     | literal
   11     | LPAREN expression RPAREN

   12 expression: term
   13           | binary_op

   14 binary_op: expression LOGICAL_OR term
   15          | expression LOGICAL_AND term
   16          | expression EQUAL_EQUAL term
   17          | expression NOT_EQUAL term
   18          | expression LESS_THAN_OR_EQUAL term
   19          | expression GREATER_THAN_OR_EQUAL term
   20          | expression LESS_THAN term
   21          | expression GREATER_THAN term
   22          | expression PLUS term
   23          | expression MINUS term
   24          | expression BITWISE_OR term
   25          | expression BITWISE_XOR term
   26          | expression TIMES term
   27          | expression DIVIDE term
   28          | expression MODULO term
   29          | expression RIGHT_SHIFT term
   30          | expression LEFT_SHIFT term
   31          | expression BITWISE_AND term
   32          | expression BIT_CLEAR term

   33 statement: declaration statement
   34          | simple_stmt statement
   35          | return_stmt
   36          | BREAK statement
   37          | CONTINUE statement
   38          | block_stmt statement
   39          | if_stmt statement
   40          | switch_stmt statement
   41          | for_stmt statement
   42          | println_stmt statement
   43          | COMMENT statement
   44          | ε

   45 simple_stmt: inc_dec_stmt
   46            | assignment

   47 inc_dec_stmt: IDENTIFIER INCREMENT
   48             | IDENTIFIER DECREMENT

   49 assignment: IDENTIFIER ASSIGN expression
   50           | IDENTIFIER assign_op expression

   51 assign_op: add_op_eq
   52          | mul_op_eq

   53 add_op_eq: ADD_ASSIGN
   54          | SUB_ASSIGN
   55          | OR_ASSIGN
   56          | XOR_ASSIGN

   57 mul_op_eq: MUL_ASSIGN
   58          | DIV_ASSIGN
   59          | MOD_ASSIGN
   60          | LEFT_SHIFT_ASSIGN
   61          | RIGHT_SHIFT_ASSIGN
   62          | AND_ASSIGN
   63          | CLEAR_ASSIGN

   64 return_stmt: RETURN return_

   65 return_: thing
   66        | ε

   67 block_stmt: LBRACE statement RBRACE

   68 boolean_exp: term LOGICAL_OR term
   69            | term LOGICAL_AND term
   70            | term EQUAL_EQUAL term
   71            | term NOT_EQUAL term
   72            | term LESS_THAN_OR_EQUAL term
   73            | term GREATER_THAN_OR_EQUAL term
   74            | term LESS_THAN term
   75            | term GREATER_THAN term

   76 if_stmt: IF boolean_exp block_stmt
   77        | IF boolean_exp block_stmt ELSE if_stmt
   78        | IF boolean_exp block_stmt ELSE block_stmt

   79 switch_stmt: SWITCH simple_stmt '{' switch_cases '}'

   80 switch_cases: switch_case
   81             | switch_cases switch_case

   82 switch_case: CASE expression_list ':' statement_list
   83            | DEFAULT ':' statement_list

   84 expression_list: expression
   85                | expression_list ',' expression

   86 statement_list: statement
   87               | statement_list statement

   88 for_stmt: FOR for_clause block_stmt

   89 for_clause: assignment SEMICOLON boolean_exp SEMICOLON simple_stmt

   90 println_stmt: PRINTLN LPAREN IDENTIFIER RPAREN
   91             | PRINTLN LPAREN STRING RPAREN

   92 type: INT_TYPE
   93     | STRING_TYPE
   94     | BOOL_TYPE

   95 literal: INTEGER
   96        | STRING
   97        | FLOAT
   98        | BOOLEAN


Terminals, with rules where they appear

    $end (0) 0
    ',' (44) 85
    ':' (58) 82 83
    '{' (123) 79
    '}' (125) 79
    error (256)
    PLUS <nd_obj> (258) 22
    MINUS <nd_obj> (259) 23
    TIMES <nd_obj> (260) 26
    DIVIDE <nd_obj> (261) 27
    ASSIGN <nd_obj> (262) 4 5 49
    MODULO <nd_obj> (263) 28
    BITWISE_AND <nd_obj> (264) 31
    BITWISE_OR <nd_obj> (265) 24
    BITWISE_XOR <nd_obj> (266) 25
    BIT_CLEAR <nd_obj> (267) 32
    LEFT_SHIFT <nd_obj> (268) 30
    RIGHT_SHIFT <nd_obj> (269) 29
    ADD_ASSIGN <nd_obj> (270) 53
    SUB_ASSIGN <nd_obj> (271) 54
    MUL_ASSIGN <nd_obj> (272) 57
    DIV_ASSIGN <nd_obj> (273) 58
    MOD_ASSIGN <nd_obj> (274) 59
    AND_ASSIGN <nd_obj> (275) 62
    OR_ASSIGN <nd_obj> (276) 55
    XOR_ASSIGN <nd_obj> (277) 56
    LEFT_SHIFT_ASSIGN <nd_obj> (278) 60
    RIGHT_SHIFT_ASSIGN <nd_obj> (279) 61
    INCREMENT <nd_obj> (280) 47
    DECREMENT <nd_obj> (281) 48
    RECEIVE <nd_obj> (282)
    CLEAR_ASSIGN <nd_obj> (283) 63
    SHORT_VAR <nd_obj> (284)
    VARIADIC_PARAM <nd_obj> (285)
    SELECTOR <nd_obj> (286)
    EQUAL_EQUAL <nd_obj> (287) 16 70
    NOT_EQUAL <nd_obj> (288) 17 71
    LESS_THAN <nd_obj> (289) 20 74
    LESS_THAN_OR_EQUAL <nd_obj> (290) 18 72
    GREATER_THAN <nd_obj> (291) 21 75
    GREATER_THAN_OR_EQUAL <nd_obj> (292) 19 73
    LOGICAL_AND <nd_obj> (293) 15 69
    LOGICAL_OR <nd_obj> (294) 14 68
    LOGICAL_NOT <nd_obj> (295)
    IF <nd_obj> (296) 76 77 78
    ELSE <nd_obj> (297) 77 78
    WHILE <nd_obj> (298)
    FOR <nd_obj> (299) 88
    SWITCH <nd_obj> (300) 79
    CASE <nd_obj> (301) 82
    DEFAULT <nd_obj> (302) 83
    BREAK <nd_obj> (303) 36
    CONTINUE <nd_obj> (304) 37
    RETURN <nd_obj> (305) 64
    VAR <nd_obj> (306) 3 4 5
    INT_TYPE <nd_obj> (307) 92
    BOOL_TYPE <nd_obj> (308) 94
    STRING_TYPE <nd_obj> (309) 93
    IMPORT <nd_obj> (310)
    FUNCTION <nd_obj> (311) 6
    APPEND <nd_obj> (312)
    LEN <nd_obj> (313)
    PRINT <nd_obj> (314)
    PRINTLN <nd_obj> (315) 90 91
    PACKAGE <nd_obj> (316) 2
    CHAN <nd_obj> (317)
    CONST <nd_obj> (318)
    DEFER <nd_obj> (319)
    FALLTHROUGH <nd_obj> (320)
    GO <nd_obj> (321)
    GOTO <nd_obj> (322)
    INTERFACE <nd_obj> (323)
    MAP <nd_obj> (324)
    RANGE <nd_obj> (325)
    SELECT <nd_obj> (326)
    STRUCT <nd_obj> (327)
    TYPE <nd_obj> (328)
    LPAREN <nd_obj> (329) 6 11 90 91
    RPAREN <nd_obj> (330) 6 11 90 91
    LBRACE <nd_obj> (331) 67
    RBRACE <nd_obj> (332) 67
    LSQPAREN <nd_obj> (333)
    RSQPAREN <nd_obj> (334)
    SEMICOLON <nd_obj> (335) 89
    COMMA <nd_obj> (336)
    COLON <nd_obj> (337)
    BOOLEAN <nd_obj> (338) 98
    IDENTIFIER <nd_obj> (339) 2 3 4 5 6 7 9 47 48 49 50 90
    INTEGER <nd_obj> (340) 95
    STRING <nd_obj> (341) 91 96
    FLOAT <nd_obj> (342) 97
    COMMENT <nd_obj> (343) 43
    MULTI_LINE_COMMENT <nd_obj> (344)


Nonterminals, with rules where they appear

    $accept (94)
        on left: 0
    program <nd_obj> (95)
        on left: 1
        on right: 0
    PackageClause <nd_obj> (96)
        on left: 2
        on right: 1
    declaration <nd_obj> (97)
        on left: 3 4 5
        on right: 33
    function_declaration <nd_obj> (98)
        on left: 6
        on right: 1
    thing <nd_obj> (99)
        on left: 7 8
        on right: 65
    term <nd_obj> (100)
        on left: 9 10 11
        on right: 12 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 68 69 70 71 72 73 74 75
    expression <nd_obj> (101)
        on left: 12 13
        on right: 4 5 11 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 49 50 84 85
    binary_op <nd_obj> (102)
        on left: 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32
        on right: 13
    statement <nd_obj> (103)
        on left: 33 34 35 36 37 38 39 40 41 42 43 44
        on right: 33 34 36 37 38 39 40 41 42 43 67 86 87
    simple_stmt <nd_obj> (104)
        on left: 45 46
        on right: 34 79 89
    inc_dec_stmt <nd_obj> (105)
        on left: 47 48
        on right: 45
    assignment <nd_obj> (106)
        on left: 49 50
        on right: 46 89
    assign_op <nd_obj> (107)
        on left: 51 52
        on right: 50
    add_op_eq <nd_obj> (108)
        on left: 53 54 55 56
        on right: 51
    mul_op_eq <nd_obj> (109)
        on left: 57 58 59 60 61 62 63
        on right: 52
    return_stmt <nd_obj> (110)
        on left: 64
        on right: 35
    return_ <nd_obj> (111)
        on left: 65 66
        on right: 64
    block_stmt <nd_obj> (112)
        on left: 67
        on right: 6 38 76 77 78 88
    boolean_exp <nd_obj> (113)
        on left: 68 69 70 71 72 73 74 75
        on right: 76 77 78 89
    if_stmt <nd_obj> (114)
        on left: 76 77 78
        on right: 39 77
    switch_stmt <nd_obj> (115)
        on left: 79
        on right: 40
    switch_cases <nd_obj> (116)
        on left: 80 81
        on right: 79 81
    switch_case <nd_obj> (117)
        on left: 82 83
        on right: 80 81
    expression_list <nd_obj> (118)
        on left: 84 85
        on right: 82 85
    statement_list <nd_obj> (119)
        on left: 86 87
        on right: 82 83 87
    for_stmt <nd_obj> (120)
        on left: 88
        on right: 41
    for_clause <nd_obj> (121)
        on left: 89
        on right: 88
    println_stmt <nd_obj> (122)
        on left: 90 91
        on right: 42
    type <nd_obj> (123)
        on left: 92 93 94
        on right: 3 4
    literal <nd_obj> (124)
        on left: 95 96 97 98
        on right: 8 10


State 0

    0 $accept: • program $end

    PACKAGE  shift, and go to state 1

    program        go to state 2
    PackageClause  go to state 3


State 1

    2 PackageClause: PACKAGE • IDENTIFIER

    IDENTIFIER  shift, and go to state 4


State 2

    0 $accept: program • $end

    $end  shift, and go to state 5


State 3

    1 program: PackageClause • function_declaration

    FUNCTION  shift, and go to state 6

    function_declaration  go to state 7


State 4

    2 PackageClause: PACKAGE IDENTIFIER •

    $default  reduce using rule 2 (PackageClause)


State 5

    0 $accept: program $end •

    $default  accept


State 6

    6 function_declaration: FUNCTION • IDENTIFIER LPAREN RPAREN block_stmt

    IDENTIFIER  shift, and go to state 8


State 7

    1 program: PackageClause function_declaration •

    $default  reduce using rule 1 (program)


State 8

    6 function_declaration: FUNCTION IDENTIFIER • LPAREN RPAREN block_stmt

    LPAREN  shift, and go to state 9


State 9

    6 function_declaration: FUNCTION IDENTIFIER LPAREN • RPAREN block_stmt

    RPAREN  shift, and go to state 10


State 10

    6 function_declaration: FUNCTION IDENTIFIER LPAREN RPAREN • block_stmt

    LBRACE  shift, and go to state 11

    block_stmt  go to state 12


State 11

   67 block_stmt: LBRACE • statement RBRACE

    IF          shift, and go to state 13
    FOR         shift, and go to state 14
    SWITCH      shift, and go to state 15
    BREAK       shift, and go to state 16
    CONTINUE    shift, and go to state 17
    RETURN      shift, and go to state 18
    VAR         shift, and go to state 19
    PRINTLN     shift, and go to state 20
    LBRACE      shift, and go to state 11
    IDENTIFIER  shift, and go to state 21
    COMMENT     shift, and go to state 22

    $default  reduce using rule 44 (statement)

    declaration   go to state 23
    statement     go to state 24
    simple_stmt   go to state 25
    inc_dec_stmt  go to state 26
    assignment    go to state 27
    return_stmt   go to state 28
    block_stmt    go to state 29
    if_stmt       go to state 30
    switch_stmt   go to state 31
    for_stmt      go to state 32
    println_stmt  go to state 33


State 12

    6 function_declaration: FUNCTION IDENTIFIER LPAREN RPAREN block_stmt •

    $default  reduce using rule 6 (function_declaration)


State 13

   76 if_stmt: IF • boolean_exp block_stmt
   77        | IF • boolean_exp block_stmt ELSE if_stmt
   78        | IF • boolean_exp block_stmt ELSE block_stmt

    LPAREN      shift, and go to state 34
    BOOLEAN     shift, and go to state 35
    IDENTIFIER  shift, and go to state 36
    INTEGER     shift, and go to state 37
    STRING      shift, and go to state 38
    FLOAT       shift, and go to state 39

    term         go to state 40
    boolean_exp  go to state 41
    literal      go to state 42


State 14

   88 for_stmt: FOR • for_clause block_stmt

    IDENTIFIER  shift, and go to state 43

    assignment  go to state 44
    for_clause  go to state 45


State 15

   79 switch_stmt: SWITCH • simple_stmt '{' switch_cases '}'

    IDENTIFIER  shift, and go to state 21

    simple_stmt   go to state 46
    inc_dec_stmt  go to state 26
    assignment    go to state 27


State 16

   36 statement: BREAK • statement

    IF          shift, and go to state 13
    FOR         shift, and go to state 14
    SWITCH      shift, and go to state 15
    BREAK       shift, and go to state 16
    CONTINUE    shift, and go to state 17
    RETURN      shift, and go to state 18
    VAR         shift, and go to state 19
    PRINTLN     shift, and go to state 20
    LBRACE      shift, and go to state 11
    IDENTIFIER  shift, and go to state 21
    COMMENT     shift, and go to state 22

    IF          [reduce using rule 44 (statement)]
    FOR         [reduce using rule 44 (statement)]
    SWITCH      [reduce using rule 44 (statement)]
    BREAK       [reduce using rule 44 (statement)]
    CONTINUE    [reduce using rule 44 (statement)]
    RETURN      [reduce using rule 44 (statement)]
    VAR         [reduce using rule 44 (statement)]
    PRINTLN     [reduce using rule 44 (statement)]
    LBRACE      [reduce using rule 44 (statement)]
    IDENTIFIER  [reduce using rule 44 (statement)]
    COMMENT     [reduce using rule 44 (statement)]
    $default    reduce using rule 44 (statement)

    declaration   go to state 23
    statement     go to state 47
    simple_stmt   go to state 25
    inc_dec_stmt  go to state 26
    assignment    go to state 27
    return_stmt   go to state 28
    block_stmt    go to state 29
    if_stmt       go to state 30
    switch_stmt   go to state 31
    for_stmt      go to state 32
    println_stmt  go to state 33


State 17

   37 statement: CONTINUE • statement

    IF          shift, and go to state 13
    FOR         shift, and go to state 14
    SWITCH      shift, and go to state 15
    BREAK       shift, and go to state 16
    CONTINUE    shift, and go to state 17
    RETURN      shift, and go to state 18
    VAR         shift, and go to state 19
    PRINTLN     shift, and go to state 20
    LBRACE      shift, and go to state 11
    IDENTIFIER  shift, and go to state 21
    COMMENT     shift, and go to state 22

    IF          [reduce using rule 44 (statement)]
    FOR         [reduce using rule 44 (statement)]
    SWITCH      [reduce using rule 44 (statement)]
    BREAK       [reduce using rule 44 (statement)]
    CONTINUE    [reduce using rule 44 (statement)]
    RETURN      [reduce using rule 44 (statement)]
    VAR         [reduce using rule 44 (statement)]
    PRINTLN     [reduce using rule 44 (statement)]
    LBRACE      [reduce using rule 44 (statement)]
    IDENTIFIER  [reduce using rule 44 (statement)]
    COMMENT     [reduce using rule 44 (statement)]
    $default    reduce using rule 44 (statement)

    declaration   go to state 23
    statement     go to state 48
    simple_stmt   go to state 25
    inc_dec_stmt  go to state 26
    assignment    go to state 27
    return_stmt   go to state 28
    block_stmt    go to state 29
    if_stmt       go to state 30
    switch_stmt   go to state 31
    for_stmt      go to state 32
    println_stmt  go to state 33


State 18

   64 return_stmt: RETURN • return_

    BOOLEAN     shift, and go to state 35
    IDENTIFIER  shift, and go to state 49
    INTEGER     shift, and go to state 37
    STRING      shift, and go to state 38
    FLOAT       shift, and go to state 39

    IDENTIFIER  [reduce using rule 66 (return_)]
    $default    reduce using rule 66 (return_)

    thing    go to state 50
    return_  go to state 51
    literal  go to state 52


State 19

    3 declaration: VAR • IDENTIFIER type
    4            | VAR • IDENTIFIER type ASSIGN expression
    5            | VAR • IDENTIFIER ASSIGN expression

    IDENTIFIER  shift, and go to state 53


State 20

   90 println_stmt: PRINTLN • LPAREN IDENTIFIER RPAREN
   91             | PRINTLN • LPAREN STRING RPAREN

    LPAREN  shift, and go to state 54


State 21

   47 inc_dec_stmt: IDENTIFIER • INCREMENT
   48             | IDENTIFIER • DECREMENT
   49 assignment: IDENTIFIER • ASSIGN expression
   50           | IDENTIFIER • assign_op expression

    ASSIGN              shift, and go to state 55
    ADD_ASSIGN          shift, and go to state 56
    SUB_ASSIGN          shift, and go to state 57
    MUL_ASSIGN          shift, and go to state 58
    DIV_ASSIGN          shift, and go to state 59
    MOD_ASSIGN          shift, and go to state 60
    AND_ASSIGN          shift, and go to state 61
    OR_ASSIGN           shift, and go to state 62
    XOR_ASSIGN          shift, and go to state 63
    LEFT_SHIFT_ASSIGN   shift, and go to state 64
    RIGHT_SHIFT_ASSIGN  shift, and go to state 65
    INCREMENT           shift, and go to state 66
    DECREMENT           shift, and go to state 67
    CLEAR_ASSIGN        shift, and go to state 68

    assign_op  go to state 69
    add_op_eq  go to state 70
    mul_op_eq  go to state 71


State 22

   43 statement: COMMENT • statement

    IF          shift, and go to state 13
    FOR         shift, and go to state 14
    SWITCH      shift, and go to state 15
    BREAK       shift, and go to state 16
    CONTINUE    shift, and go to state 17
    RETURN      shift, and go to state 18
    VAR         shift, and go to state 19
    PRINTLN     shift, and go to state 20
    LBRACE      shift, and go to state 11
    IDENTIFIER  shift, and go to state 21
    COMMENT     shift, and go to state 22

    IF          [reduce using rule 44 (statement)]
    FOR         [reduce using rule 44 (statement)]
    SWITCH      [reduce using rule 44 (statement)]
    BREAK       [reduce using rule 44 (statement)]
    CONTINUE    [reduce using rule 44 (statement)]
    RETURN      [reduce using rule 44 (statement)]
    VAR         [reduce using rule 44 (statement)]
    PRINTLN     [reduce using rule 44 (statement)]
    LBRACE      [reduce using rule 44 (statement)]
    IDENTIFIER  [reduce using rule 44 (statement)]
    COMMENT     [reduce using rule 44 (statement)]
    $default    reduce using rule 44 (statement)

    declaration   go to state 23
    statement     go to state 72
    simple_stmt   go to state 25
    inc_dec_stmt  go to state 26
    assignment    go to state 27
    return_stmt   go to state 28
    block_stmt    go to state 29
    if_stmt       go to state 30
    switch_stmt   go to state 31
    for_stmt      go to state 32
    println_stmt  go to state 33


State 23

   33 statement: declaration • statement

    IF          shift, and go to state 13
    FOR         shift, and go to state 14
    SWITCH      shift, and go to state 15
    BREAK       shift, and go to state 16
    CONTINUE    shift, and go to state 17
    RETURN      shift, and go to state 18
    VAR         shift, and go to state 19
    PRINTLN     shift, and go to state 20
    LBRACE      shift, and go to state 11
    IDENTIFIER  shift, and go to state 21
    COMMENT     shift, and go to state 22

    IF          [reduce using rule 44 (statement)]
    FOR         [reduce using rule 44 (statement)]
    SWITCH      [reduce using rule 44 (statement)]
    BREAK       [reduce using rule 44 (statement)]
    CONTINUE    [reduce using rule 44 (statement)]
    RETURN      [reduce using rule 44 (statement)]
    VAR         [reduce using rule 44 (statement)]
    PRINTLN     [reduce using rule 44 (statement)]
    LBRACE      [reduce using rule 44 (statement)]
    IDENTIFIER  [reduce using rule 44 (statement)]
    COMMENT     [reduce using rule 44 (statement)]
    $default    reduce using rule 44 (statement)

    declaration   go to state 23
    statement     go to state 73
    simple_stmt   go to state 25
    inc_dec_stmt  go to state 26
    assignment    go to state 27
    return_stmt   go to state 28
    block_stmt    go to state 29
    if_stmt       go to state 30
    switch_stmt   go to state 31
    for_stmt      go to state 32
    println_stmt  go to state 33


State 24

   67 block_stmt: LBRACE statement • RBRACE

    RBRACE  shift, and go to state 74


State 25

   34 statement: simple_stmt • statement

    IF          shift, and go to state 13
    FOR         shift, and go to state 14
    SWITCH      shift, and go to state 15
    BREAK       shift, and go to state 16
    CONTINUE    shift, and go to state 17
    RETURN      shift, and go to state 18
    VAR         shift, and go to state 19
    PRINTLN     shift, and go to state 20
    LBRACE      shift, and go to state 11
    IDENTIFIER  shift, and go to state 21
    COMMENT     shift, and go to state 22

    IF          [reduce using rule 44 (statement)]
    FOR         [reduce using rule 44 (statement)]
    SWITCH      [reduce using rule 44 (statement)]
    BREAK       [reduce using rule 44 (statement)]
    CONTINUE    [reduce using rule 44 (statement)]
    RETURN      [reduce using rule 44 (statement)]
    VAR         [reduce using rule 44 (statement)]
    PRINTLN     [reduce using rule 44 (statement)]
    LBRACE      [reduce using rule 44 (statement)]
    IDENTIFIER  [reduce using rule 44 (statement)]
    COMMENT     [reduce using rule 44 (statement)]
    $default    reduce using rule 44 (statement)

    declaration   go to state 23
    statement     go to state 75
    simple_stmt   go to state 25
    inc_dec_stmt  go to state 26
    assignment    go to state 27
    return_stmt   go to state 28
    block_stmt    go to state 29
    if_stmt       go to state 30
    switch_stmt   go to state 31
    for_stmt      go to state 32
    println_stmt  go to state 33


State 26

   45 simple_stmt: inc_dec_stmt •

    $default  reduce using rule 45 (simple_stmt)


State 27

   46 simple_stmt: assignment •

    $default  reduce using rule 46 (simple_stmt)


State 28

   35 statement: return_stmt •

    $default  reduce using rule 35 (statement)


State 29

   38 statement: block_stmt • statement

    IF          shift, and go to state 13
    FOR         shift, and go to state 14
    SWITCH      shift, and go to state 15
    BREAK       shift, and go to state 16
    CONTINUE    shift, and go to state 17
    RETURN      shift, and go to state 18
    VAR         shift, and go to state 19
    PRINTLN     shift, and go to state 20
    LBRACE      shift, and go to state 11
    IDENTIFIER  shift, and go to state 21
    COMMENT     shift, and go to state 22

    IF          [reduce using rule 44 (statement)]
    FOR         [reduce using rule 44 (statement)]
    SWITCH      [reduce using rule 44 (statement)]
    BREAK       [reduce using rule 44 (statement)]
    CONTINUE    [reduce using rule 44 (statement)]
    RETURN      [reduce using rule 44 (statement)]
    VAR         [reduce using rule 44 (statement)]
    PRINTLN     [reduce using rule 44 (statement)]
    LBRACE      [reduce using rule 44 (statement)]
    IDENTIFIER  [reduce using rule 44 (statement)]
    COMMENT     [reduce using rule 44 (statement)]
    $default    reduce using rule 44 (statement)

    declaration   go to state 23
    statement     go to state 76
    simple_stmt   go to state 25
    inc_dec_stmt  go to state 26
    assignment    go to state 27
    return_stmt   go to state 28
    block_stmt    go to state 29
    if_stmt       go to state 30
    switch_stmt   go to state 31
    for_stmt      go to state 32
    println_stmt  go to state 33


State 30

   39 statement: if_stmt • statement

    IF          shift, and go to state 13
    FOR         shift, and go to state 14
    SWITCH      shift, and go to state 15
    BREAK       shift, and go to state 16
    CONTINUE    shift, and go to state 17
    RETURN      shift, and go to state 18
    VAR         shift, and go to state 19
    PRINTLN     shift, and go to state 20
    LBRACE      shift, and go to state 11
    IDENTIFIER  shift, and go to state 21
    COMMENT     shift, and go to state 22

    IF          [reduce using rule 44 (statement)]
    FOR         [reduce using rule 44 (statement)]
    SWITCH      [reduce using rule 44 (statement)]
    BREAK       [reduce using rule 44 (statement)]
    CONTINUE    [reduce using rule 44 (statement)]
    RETURN      [reduce using rule 44 (statement)]
    VAR         [reduce using rule 44 (statement)]
    PRINTLN     [reduce using rule 44 (statement)]
    LBRACE      [reduce using rule 44 (statement)]
    IDENTIFIER  [reduce using rule 44 (statement)]
    COMMENT     [reduce using rule 44 (statement)]
    $default    reduce using rule 44 (statement)

    declaration   go to state 23
    statement     go to state 77
    simple_stmt   go to state 25
    inc_dec_stmt  go to state 26
    assignment    go to state 27
    return_stmt   go to state 28
    block_stmt    go to state 29
    if_stmt       go to state 30
    switch_stmt   go to state 31
    for_stmt      go to state 32
    println_stmt  go to state 33


State 31

   40 statement: switch_stmt • statement

    IF          shift, and go to state 13
    FOR         shift, and go to state 14
    SWITCH      shift, and go to state 15
    BREAK       shift, and go to state 16
    CONTINUE    shift, and go to state 17
    RETURN      shift, and go to state 18
    VAR         shift, and go to state 19
    PRINTLN     shift, and go to state 20
    LBRACE      shift, and go to state 11
    IDENTIFIER  shift, and go to state 21
    COMMENT     shift, and go to state 22

    IF          [reduce using rule 44 (statement)]
    FOR         [reduce using rule 44 (statement)]
    SWITCH      [reduce using rule 44 (statement)]
    BREAK       [reduce using rule 44 (statement)]
    CONTINUE    [reduce using rule 44 (statement)]
    RETURN      [reduce using rule 44 (statement)]
    VAR         [reduce using rule 44 (statement)]
    PRINTLN     [reduce using rule 44 (statement)]
    LBRACE      [reduce using rule 44 (statement)]
    IDENTIFIER  [reduce using rule 44 (statement)]
    COMMENT     [reduce using rule 44 (statement)]
    $default    reduce using rule 44 (statement)

    declaration   go to state 23
    statement     go to state 78
    simple_stmt   go to state 25
    inc_dec_stmt  go to state 26
    assignment    go to state 27
    return_stmt   go to state 28
    block_stmt    go to state 29
    if_stmt       go to state 30
    switch_stmt   go to state 31
    for_stmt      go to state 32
    println_stmt  go to state 33


State 32

   41 statement: for_stmt • statement

    IF          shift, and go to state 13
    FOR         shift, and go to state 14
    SWITCH      shift, and go to state 15
    BREAK       shift, and go to state 16
    CONTINUE    shift, and go to state 17
    RETURN      shift, and go to state 18
    VAR         shift, and go to state 19
    PRINTLN     shift, and go to state 20
    LBRACE      shift, and go to state 11
    IDENTIFIER  shift, and go to state 21
    COMMENT     shift, and go to state 22

    IF          [reduce using rule 44 (statement)]
    FOR         [reduce using rule 44 (statement)]
    SWITCH      [reduce using rule 44 (statement)]
    BREAK       [reduce using rule 44 (statement)]
    CONTINUE    [reduce using rule 44 (statement)]
    RETURN      [reduce using rule 44 (statement)]
    VAR         [reduce using rule 44 (statement)]
    PRINTLN     [reduce using rule 44 (statement)]
    LBRACE      [reduce using rule 44 (statement)]
    IDENTIFIER  [reduce using rule 44 (statement)]
    COMMENT     [reduce using rule 44 (statement)]
    $default    reduce using rule 44 (statement)

    declaration   go to state 23
    statement     go to state 79
    simple_stmt   go to state 25
    inc_dec_stmt  go to state 26
    assignment    go to state 27
    return_stmt   go to state 28
    block_stmt    go to state 29
    if_stmt       go to state 30
    switch_stmt   go to state 31
    for_stmt      go to state 32
    println_stmt  go to state 33


State 33

   42 statement: println_stmt • statement

    IF          shift, and go to state 13
    FOR         shift, and go to state 14
    SWITCH      shift, and go to state 15
    BREAK       shift, and go to state 16
    CONTINUE    shift, and go to state 17
    RETURN      shift, and go to state 18
    VAR         shift, and go to state 19
    PRINTLN     shift, and go to state 20
    LBRACE      shift, and go to state 11
    IDENTIFIER  shift, and go to state 21
    COMMENT     shift, and go to state 22

    IF          [reduce using rule 44 (statement)]
    FOR         [reduce using rule 44 (statement)]
    SWITCH      [reduce using rule 44 (statement)]
    BREAK       [reduce using rule 44 (statement)]
    CONTINUE    [reduce using rule 44 (statement)]
    RETURN      [reduce using rule 44 (statement)]
    VAR         [reduce using rule 44 (statement)]
    PRINTLN     [reduce using rule 44 (statement)]
    LBRACE      [reduce using rule 44 (statement)]
    IDENTIFIER  [reduce using rule 44 (statement)]
    COMMENT     [reduce using rule 44 (statement)]
    $default    reduce using rule 44 (statement)

    declaration   go to state 23
    statement     go to state 80
    simple_stmt   go to state 25
    inc_dec_stmt  go to state 26
    assignment    go to state 27
    return_stmt   go to state 28
    block_stmt    go to state 29
    if_stmt       go to state 30
    switch_stmt   go to state 31
    for_stmt      go to state 32
    println_stmt  go to state 33


State 34

   11 term: LPAREN • expression RPAREN

    LPAREN      shift, and go to state 34
    BOOLEAN     shift, and go to state 35
    IDENTIFIER  shift, and go to state 36
    INTEGER     shift, and go to state 37
    STRING      shift, and go to state 38
    FLOAT       shift, and go to state 39

    term        go to state 81
    expression  go to state 82
    binary_op   go to state 83
    literal     go to state 42


State 35

   98 literal: BOOLEAN •

    $default  reduce using rule 98 (literal)


State 36

    9 term: IDENTIFIER •

    $default  reduce using rule 9 (term)


State 37

   95 literal: INTEGER •

    $default  reduce using rule 95 (literal)


State 38

   96 literal: STRING •

    $default  reduce using rule 96 (literal)


State 39

   97 literal: FLOAT •

    $default  reduce using rule 97 (literal)


State 40

   68 boolean_exp: term • LOGICAL_OR term
   69            | term • LOGICAL_AND term
   70            | term • EQUAL_EQUAL term
   71            | term • NOT_EQUAL term
   72            | term • LESS_THAN_OR_EQUAL term
   73            | term • GREATER_THAN_OR_EQUAL term
   74            | term • LESS_THAN term
   75            | term • GREATER_THAN term

    EQUAL_EQUAL            shift, and go to state 84
    NOT_EQUAL              shift, and go to state 85
    LESS_THAN              shift, and go to state 86
    LESS_THAN_OR_EQUAL     shift, and go to state 87
    GREATER_THAN           shift, and go to state 88
    GREATER_THAN_OR_EQUAL  shift, and go to state 89
    LOGICAL_AND            shift, and go to state 90
    LOGICAL_OR             shift, and go to state 91


State 41

   76 if_stmt: IF boolean_exp • block_stmt
   77        | IF boolean_exp • block_stmt ELSE if_stmt
   78        | IF boolean_exp • block_stmt ELSE block_stmt

    LBRACE  shift, and go to state 11

    block_stmt  go to state 92


State 42

   10 term: literal •

    $default  reduce using rule 10 (term)


State 43

   49 assignment: IDENTIFIER • ASSIGN expression
   50           | IDENTIFIER • assign_op expression

    ASSIGN              shift, and go to state 55
    ADD_ASSIGN          shift, and go to state 56
    SUB_ASSIGN          shift, and go to state 57
    MUL_ASSIGN          shift, and go to state 58
    DIV_ASSIGN          shift, and go to state 59
    MOD_ASSIGN          shift, and go to state 60
    AND_ASSIGN          shift, and go to state 61
    OR_ASSIGN           shift, and go to state 62
    XOR_ASSIGN          shift, and go to state 63
    LEFT_SHIFT_ASSIGN   shift, and go to state 64
    RIGHT_SHIFT_ASSIGN  shift, and go to state 65
    CLEAR_ASSIGN        shift, and go to state 68

    assign_op  go to state 69
    add_op_eq  go to state 70
    mul_op_eq  go to state 71


State 44

   89 for_clause: assignment • SEMICOLON boolean_exp SEMICOLON simple_stmt

    SEMICOLON  shift, and go to state 93


State 45

   88 for_stmt: FOR for_clause • block_stmt

    LBRACE  shift, and go to state 11

    block_stmt  go to state 94


State 46

   79 switch_stmt: SWITCH simple_stmt • '{' switch_cases '}'

    '{'  shift, and go to state 95


State 47

   36 statement: BREAK statement •

    $default  reduce using rule 36 (statement)


State 48

   37 statement: CONTINUE statement •

    $default  reduce using rule 37 (statement)


State 49

    7 thing: IDENTIFIER •

    $default  reduce using rule 7 (thing)


State 50

   65 return_: thing •

    $default  reduce using rule 65 (return_)


State 51

   64 return_stmt: RETURN return_ •

    $default  reduce using rule 64 (return_stmt)


State 52

    8 thing: literal •

    $default  reduce using rule 8 (thing)


State 53

    3 declaration: VAR IDENTIFIER • type
    4            | VAR IDENTIFIER • type ASSIGN expression
    5            | VAR IDENTIFIER • ASSIGN expression

    ASSIGN       shift, and go to state 96
    INT_TYPE     shift, and go to state 97
    BOOL_TYPE    shift, and go to state 98
    STRING_TYPE  shift, and go to state 99

    type  go to state 100


State 54

   90 println_stmt: PRINTLN LPAREN • IDENTIFIER RPAREN
   91             | PRINTLN LPAREN • STRING RPAREN

    IDENTIFIER  shift, and go to state 101
    STRING      shift, and go to state 102


State 55

   49 assignment: IDENTIFIER ASSIGN • expression

    LPAREN      shift, and go to state 34
    BOOLEAN     shift, and go to state 35
    IDENTIFIER  shift, and go to state 36
    INTEGER     shift, and go to state 37
    STRING      shift, and go to state 38
    FLOAT       shift, and go to state 39

    term        go to state 81
    expression  go to state 103
    binary_op   go to state 83
    literal     go to state 42


State 56

   53 add_op_eq: ADD_ASSIGN •

    $default  reduce using rule 53 (add_op_eq)


State 57

   54 add_op_eq: SUB_ASSIGN •

    $default  reduce using rule 54 (add_op_eq)


State 58

   57 mul_op_eq: MUL_ASSIGN •

    $default  reduce using rule 57 (mul_op_eq)


State 59

   58 mul_op_eq: DIV_ASSIGN •

    $default  reduce using rule 58 (mul_op_eq)


State 60

   59 mul_op_eq: MOD_ASSIGN •

    $default  reduce using rule 59 (mul_op_eq)


State 61

   62 mul_op_eq: AND_ASSIGN •

    $default  reduce using rule 62 (mul_op_eq)


State 62

   55 add_op_eq: OR_ASSIGN •

    $default  reduce using rule 55 (add_op_eq)


State 63

   56 add_op_eq: XOR_ASSIGN •

    $default  reduce using rule 56 (add_op_eq)


State 64

   60 mul_op_eq: LEFT_SHIFT_ASSIGN •

    $default  reduce using rule 60 (mul_op_eq)


State 65

   61 mul_op_eq: RIGHT_SHIFT_ASSIGN •

    $default  reduce using rule 61 (mul_op_eq)


State 66

   47 inc_dec_stmt: IDENTIFIER INCREMENT •

    $default  reduce using rule 47 (inc_dec_stmt)


State 67

   48 inc_dec_stmt: IDENTIFIER DECREMENT •

    $default  reduce using rule 48 (inc_dec_stmt)


State 68

   63 mul_op_eq: CLEAR_ASSIGN •

    $default  reduce using rule 63 (mul_op_eq)


State 69

   50 assignment: IDENTIFIER assign_op • expression

    LPAREN      shift, and go to state 34
    BOOLEAN     shift, and go to state 35
    IDENTIFIER  shift, and go to state 36
    INTEGER     shift, and go to state 37
    STRING      shift, and go to state 38
    FLOAT       shift, and go to state 39

    term        go to state 81
    expression  go to state 104
    binary_op   go to state 83
    literal     go to state 42


State 70

   51 assign_op: add_op_eq •

    $default  reduce using rule 51 (assign_op)


State 71

   52 assign_op: mul_op_eq •

    $default  reduce using rule 52 (assign_op)


State 72

   43 statement: COMMENT statement •

    $default  reduce using rule 43 (statement)


State 73

   33 statement: declaration statement •

    $default  reduce using rule 33 (statement)


State 74

   67 block_stmt: LBRACE statement RBRACE •

    $default  reduce using rule 67 (block_stmt)


State 75

   34 statement: simple_stmt statement •

    $default  reduce using rule 34 (statement)


State 76

   38 statement: block_stmt statement •

    $default  reduce using rule 38 (statement)


State 77

   39 statement: if_stmt statement •

    $default  reduce using rule 39 (statement)


State 78

   40 statement: switch_stmt statement •

    $default  reduce using rule 40 (statement)


State 79

   41 statement: for_stmt statement •

    $default  reduce using rule 41 (statement)


State 80

   42 statement: println_stmt statement •

    $default  reduce using rule 42 (statement)


State 81

   12 expression: term •

    $default  reduce using rule 12 (expression)


State 82

   11 term: LPAREN expression • RPAREN
   14 binary_op: expression • LOGICAL_OR term
   15          | expression • LOGICAL_AND term
   16          | expression • EQUAL_EQUAL term
   17          | expression • NOT_EQUAL term
   18          | expression • LESS_THAN_OR_EQUAL term
   19          | expression • GREATER_THAN_OR_EQUAL term
   20          | expression • LESS_THAN term
   21          | expression • GREATER_THAN term
   22          | expression • PLUS term
   23          | expression • MINUS term
   24          | expression • BITWISE_OR term
   25          | expression • BITWISE_XOR term
   26          | expression • TIMES term
   27          | expression • DIVIDE term
   28          | expression • MODULO term
   29          | expression • RIGHT_SHIFT term
   30          | expression • LEFT_SHIFT term
   31          | expression • BITWISE_AND term
   32          | expression • BIT_CLEAR term

    PLUS                   shift, and go to state 105
    MINUS                  shift, and go to state 106
    TIMES                  shift, and go to state 107
    DIVIDE                 shift, and go to state 108
    MODULO                 shift, and go to state 109
    BITWISE_AND            shift, and go to state 110
    BITWISE_OR             shift, and go to state 111
    BITWISE_XOR            shift, and go to state 112
    BIT_CLEAR              shift, and go to state 113
    LEFT_SHIFT             shift, and go to state 114
    RIGHT_SHIFT            shift, and go to state 115
    EQUAL_EQUAL            shift, and go to state 116
    NOT_EQUAL              shift, and go to state 117
    LESS_THAN              shift, and go to state 118
    LESS_THAN_OR_EQUAL     shift, and go to state 119
    GREATER_THAN           shift, and go to state 120
    GREATER_THAN_OR_EQUAL  shift, and go to state 121
    LOGICAL_AND            shift, and go to state 122
    LOGICAL_OR             shift, and go to state 123
    RPAREN                 shift, and go to state 124


State 83

   13 expression: binary_op •

    $default  reduce using rule 13 (expression)


State 84

   70 boolean_exp: term EQUAL_EQUAL • term

    LPAREN      shift, and go to state 34
    BOOLEAN     shift, and go to state 35
    IDENTIFIER  shift, and go to state 36
    INTEGER     shift, and go to state 37
    STRING      shift, and go to state 38
    FLOAT       shift, and go to state 39

    term     go to state 125
    literal  go to state 42


State 85

   71 boolean_exp: term NOT_EQUAL • term

    LPAREN      shift, and go to state 34
    BOOLEAN     shift, and go to state 35
    IDENTIFIER  shift, and go to state 36
    INTEGER     shift, and go to state 37
    STRING      shift, and go to state 38
    FLOAT       shift, and go to state 39

    term     go to state 126
    literal  go to state 42


State 86

   74 boolean_exp: term LESS_THAN • term

    LPAREN      shift, and go to state 34
    BOOLEAN     shift, and go to state 35
    IDENTIFIER  shift, and go to state 36
    INTEGER     shift, and go to state 37
    STRING      shift, and go to state 38
    FLOAT       shift, and go to state 39

    term     go to state 127
    literal  go to state 42


State 87

   72 boolean_exp: term LESS_THAN_OR_EQUAL • term

    LPAREN      shift, and go to state 34
    BOOLEAN     shift, and go to state 35
    IDENTIFIER  shift, and go to state 36
    INTEGER     shift, and go to state 37
    STRING      shift, and go to state 38
    FLOAT       shift, and go to state 39

    term     go to state 128
    literal  go to state 42


State 88

   75 boolean_exp: term GREATER_THAN • term

    LPAREN      shift, and go to state 34
    BOOLEAN     shift, and go to state 35
    IDENTIFIER  shift, and go to state 36
    INTEGER     shift, and go to state 37
    STRING      shift, and go to state 38
    FLOAT       shift, and go to state 39

    term     go to state 129
    literal  go to state 42


State 89

   73 boolean_exp: term GREATER_THAN_OR_EQUAL • term

    LPAREN      shift, and go to state 34
    BOOLEAN     shift, and go to state 35
    IDENTIFIER  shift, and go to state 36
    INTEGER     shift, and go to state 37
    STRING      shift, and go to state 38
    FLOAT       shift, and go to state 39

    term     go to state 130
    literal  go to state 42


State 90

   69 boolean_exp: term LOGICAL_AND • term

    LPAREN      shift, and go to state 34
    BOOLEAN     shift, and go to state 35
    IDENTIFIER  shift, and go to state 36
    INTEGER     shift, and go to state 37
    STRING      shift, and go to state 38
    FLOAT       shift, and go to state 39

    term     go to state 131
    literal  go to state 42


State 91

   68 boolean_exp: term LOGICAL_OR • term

    LPAREN      shift, and go to state 34
    BOOLEAN     shift, and go to state 35
    IDENTIFIER  shift, and go to state 36
    INTEGER     shift, and go to state 37
    STRING      shift, and go to state 38
    FLOAT       shift, and go to state 39

    term     go to state 132
    literal  go to state 42


State 92

   76 if_stmt: IF boolean_exp block_stmt •
   77        | IF boolean_exp block_stmt • ELSE if_stmt
   78        | IF boolean_exp block_stmt • ELSE block_stmt

    ELSE  shift, and go to state 133

    $default  reduce using rule 76 (if_stmt)


State 93

   89 for_clause: assignment SEMICOLON • boolean_exp SEMICOLON simple_stmt

    LPAREN      shift, and go to state 34
    BOOLEAN     shift, and go to state 35
    IDENTIFIER  shift, and go to state 36
    INTEGER     shift, and go to state 37
    STRING      shift, and go to state 38
    FLOAT       shift, and go to state 39

    term         go to state 40
    boolean_exp  go to state 134
    literal      go to state 42


State 94

   88 for_stmt: FOR for_clause block_stmt •

    $default  reduce using rule 88 (for_stmt)


State 95

   79 switch_stmt: SWITCH simple_stmt '{' • switch_cases '}'

    CASE     shift, and go to state 135
    DEFAULT  shift, and go to state 136

    switch_cases  go to state 137
    switch_case   go to state 138


State 96

    5 declaration: VAR IDENTIFIER ASSIGN • expression

    LPAREN      shift, and go to state 34
    BOOLEAN     shift, and go to state 35
    IDENTIFIER  shift, and go to state 36
    INTEGER     shift, and go to state 37
    STRING      shift, and go to state 38
    FLOAT       shift, and go to state 39

    term        go to state 81
    expression  go to state 139
    binary_op   go to state 83
    literal     go to state 42


State 97

   92 type: INT_TYPE •

    $default  reduce using rule 92 (type)


State 98

   94 type: BOOL_TYPE •

    $default  reduce using rule 94 (type)


State 99

   93 type: STRING_TYPE •

    $default  reduce using rule 93 (type)


State 100

    3 declaration: VAR IDENTIFIER type •
    4            | VAR IDENTIFIER type • ASSIGN expression

    ASSIGN  shift, and go to state 140

    $default  reduce using rule 3 (declaration)


State 101

   90 println_stmt: PRINTLN LPAREN IDENTIFIER • RPAREN

    RPAREN  shift, and go to state 141


State 102

   91 println_stmt: PRINTLN LPAREN STRING • RPAREN

    RPAREN  shift, and go to state 142


State 103

   14 binary_op: expression • LOGICAL_OR term
   15          | expression • LOGICAL_AND term
   16          | expression • EQUAL_EQUAL term
   17          | expression • NOT_EQUAL term
   18          | expression • LESS_THAN_OR_EQUAL term
   19          | expression • GREATER_THAN_OR_EQUAL term
   20          | expression • LESS_THAN term
   21          | expression • GREATER_THAN term
   22          | expression • PLUS term
   23          | expression • MINUS term
   24          | expression • BITWISE_OR term
   25          | expression • BITWISE_XOR term
   26          | expression • TIMES term
   27          | expression • DIVIDE term
   28          | expression • MODULO term
   29          | expression • RIGHT_SHIFT term
   30          | expression • LEFT_SHIFT term
   31          | expression • BITWISE_AND term
   32          | expression • BIT_CLEAR term
   49 assignment: IDENTIFIER ASSIGN expression •

    PLUS                   shift, and go to state 105
    MINUS                  shift, and go to state 106
    TIMES                  shift, and go to state 107
    DIVIDE                 shift, and go to state 108
    MODULO                 shift, and go to state 109
    BITWISE_AND            shift, and go to state 110
    BITWISE_OR             shift, and go to state 111
    BITWISE_XOR            shift, and go to state 112
    BIT_CLEAR              shift, and go to state 113
    LEFT_SHIFT             shift, and go to state 114
    RIGHT_SHIFT            shift, and go to state 115
    EQUAL_EQUAL            shift, and go to state 116
    NOT_EQUAL              shift, and go to state 117
    LESS_THAN              shift, and go to state 118
    LESS_THAN_OR_EQUAL     shift, and go to state 119
    GREATER_THAN           shift, and go to state 120
    GREATER_THAN_OR_EQUAL  shift, and go to state 121
    LOGICAL_AND            shift, and go to state 122
    LOGICAL_OR             shift, and go to state 123

    $default  reduce using rule 49 (assignment)


State 104

   14 binary_op: expression • LOGICAL_OR term
   15          | expression • LOGICAL_AND term
   16          | expression • EQUAL_EQUAL term
   17          | expression • NOT_EQUAL term
   18          | expression • LESS_THAN_OR_EQUAL term
   19          | expression • GREATER_THAN_OR_EQUAL term
   20          | expression • LESS_THAN term
   21          | expression • GREATER_THAN term
   22          | expression • PLUS term
   23          | expression • MINUS term
   24          | expression • BITWISE_OR term
   25          | expression • BITWISE_XOR term
   26          | expression • TIMES term
   27          | expression • DIVIDE term
   28          | expression • MODULO term
   29          | expression • RIGHT_SHIFT term
   30          | expression • LEFT_SHIFT term
   31          | expression • BITWISE_AND term
   32          | expression • BIT_CLEAR term
   50 assignment: IDENTIFIER assign_op expression •

    PLUS                   shift, and go to state 105
    MINUS                  shift, and go to state 106
    TIMES                  shift, and go to state 107
    DIVIDE                 shift, and go to state 108
    MODULO                 shift, and go to state 109
    BITWISE_AND            shift, and go to state 110
    BITWISE_OR             shift, and go to state 111
    BITWISE_XOR            shift, and go to state 112
    BIT_CLEAR              shift, and go to state 113
    LEFT_SHIFT             shift, and go to state 114
    RIGHT_SHIFT            shift, and go to state 115
    EQUAL_EQUAL            shift, and go to state 116
    NOT_EQUAL              shift, and go to state 117
    LESS_THAN              shift, and go to state 118
    LESS_THAN_OR_EQUAL     shift, and go to state 119
    GREATER_THAN           shift, and go to state 120
    GREATER_THAN_OR_EQUAL  shift, and go to state 121
    LOGICAL_AND            shift, and go to state 122
    LOGICAL_OR             shift, and go to state 123

    $default  reduce using rule 50 (assignment)


State 105

   22 binary_op: expression PLUS • term

    LPAREN      shift, and go to state 34
    BOOLEAN     shift, and go to state 35
    IDENTIFIER  shift, and go to state 36
    INTEGER     shift, and go to state 37
    STRING      shift, and go to state 38
    FLOAT       shift, and go to state 39

    term     go to state 143
    literal  go to state 42


State 106

   23 binary_op: expression MINUS • term

    LPAREN      shift, and go to state 34
    BOOLEAN     shift, and go to state 35
    IDENTIFIER  shift, and go to state 36
    INTEGER     shift, and go to state 37
    STRING      shift, and go to state 38
    FLOAT       shift, and go to state 39

    term     go to state 144
    literal  go to state 42


State 107

   26 binary_op: expression TIMES • term

    LPAREN      shift, and go to state 34
    BOOLEAN     shift, and go to state 35
    IDENTIFIER  shift, and go to state 36
    INTEGER     shift, and go to state 37
    STRING      shift, and go to state 38
    FLOAT       shift, and go to state 39

    term     go to state 145
    literal  go to state 42


State 108

   27 binary_op: expression DIVIDE • term

    LPAREN      shift, and go to state 34
    BOOLEAN     shift, and go to state 35
    IDENTIFIER  shift, and go to state 36
    INTEGER     shift, and go to state 37
    STRING      shift, and go to state 38
    FLOAT       shift, and go to state 39

    term     go to state 146
    literal  go to state 42


State 109

   28 binary_op: expression MODULO • term

    LPAREN      shift, and go to state 34
    BOOLEAN     shift, and go to state 35
    IDENTIFIER  shift, and go to state 36
    INTEGER     shift, and go to state 37
    STRING      shift, and go to state 38
    FLOAT       shift, and go to state 39

    term     go to state 147
    literal  go to state 42


State 110

   31 binary_op: expression BITWISE_AND • term

    LPAREN      shift, and go to state 34
    BOOLEAN     shift, and go to state 35
    IDENTIFIER  shift, and go to state 36
    INTEGER     shift, and go to state 37
    STRING      shift, and go to state 38
    FLOAT       shift, and go to state 39

    term     go to state 148
    literal  go to state 42


State 111

   24 binary_op: expression BITWISE_OR • term

    LPAREN      shift, and go to state 34
    BOOLEAN     shift, and go to state 35
    IDENTIFIER  shift, and go to state 36
    INTEGER     shift, and go to state 37
    STRING      shift, and go to state 38
    FLOAT       shift, and go to state 39

    term     go to state 149
    literal  go to state 42


State 112

   25 binary_op: expression BITWISE_XOR • term

    LPAREN      shift, and go to state 34
    BOOLEAN     shift, and go to state 35
    IDENTIFIER  shift, and go to state 36
    INTEGER     shift, and go to state 37
    STRING      shift, and go to state 38
    FLOAT       shift, and go to state 39

    term     go to state 150
    literal  go to state 42


State 113

   32 binary_op: expression BIT_CLEAR • term

    LPAREN      shift, and go to state 34
    BOOLEAN     shift, and go to state 35
    IDENTIFIER  shift, and go to state 36
    INTEGER     shift, and go to state 37
    STRING      shift, and go to state 38
    FLOAT       shift, and go to state 39

    term     go to state 151
    literal  go to state 42


State 114

   30 binary_op: expression LEFT_SHIFT • term

    LPAREN      shift, and go to state 34
    BOOLEAN     shift, and go to state 35
    IDENTIFIER  shift, and go to state 36
    INTEGER     shift, and go to state 37
    STRING      shift, and go to state 38
    FLOAT       shift, and go to state 39

    term     go to state 152
    literal  go to state 42


State 115

   29 binary_op: expression RIGHT_SHIFT • term

    LPAREN      shift, and go to state 34
    BOOLEAN     shift, and go to state 35
    IDENTIFIER  shift, and go to state 36
    INTEGER     shift, and go to state 37
    STRING      shift, and go to state 38
    FLOAT       shift, and go to state 39

    term     go to state 153
    literal  go to state 42


State 116

   16 binary_op: expression EQUAL_EQUAL • term

    LPAREN      shift, and go to state 34
    BOOLEAN     shift, and go to state 35
    IDENTIFIER  shift, and go to state 36
    INTEGER     shift, and go to state 37
    STRING      shift, and go to state 38
    FLOAT       shift, and go to state 39

    term     go to state 154
    literal  go to state 42


State 117

   17 binary_op: expression NOT_EQUAL • term

    LPAREN      shift, and go to state 34
    BOOLEAN     shift, and go to state 35
    IDENTIFIER  shift, and go to state 36
    INTEGER     shift, and go to state 37
    STRING      shift, and go to state 38
    FLOAT       shift, and go to state 39

    term     go to state 155
    literal  go to state 42


State 118

   20 binary_op: expression LESS_THAN • term

    LPAREN      shift, and go to state 34
    BOOLEAN     shift, and go to state 35
    IDENTIFIER  shift, and go to state 36
    INTEGER     shift, and go to state 37
    STRING      shift, and go to state 38
    FLOAT       shift, and go to state 39

    term     go to state 156
    literal  go to state 42


State 119

   18 binary_op: expression LESS_THAN_OR_EQUAL • term

    LPAREN      shift, and go to state 34
    BOOLEAN     shift, and go to state 35
    IDENTIFIER  shift, and go to state 36
    INTEGER     shift, and go to state 37
    STRING      shift, and go to state 38
    FLOAT       shift, and go to state 39

    term     go to state 157
    literal  go to state 42


State 120

   21 binary_op: expression GREATER_THAN • term

    LPAREN      shift, and go to state 34
    BOOLEAN     shift, and go to state 35
    IDENTIFIER  shift, and go to state 36
    INTEGER     shift, and go to state 37
    STRING      shift, and go to state 38
    FLOAT       shift, and go to state 39

    term     go to state 158
    literal  go to state 42


State 121

   19 binary_op: expression GREATER_THAN_OR_EQUAL • term

    LPAREN      shift, and go to state 34
    BOOLEAN     shift, and go to state 35
    IDENTIFIER  shift, and go to state 36
    INTEGER     shift, and go to state 37
    STRING      shift, and go to state 38
    FLOAT       shift, and go to state 39

    term     go to state 159
    literal  go to state 42


State 122

   15 binary_op: expression LOGICAL_AND • term

    LPAREN      shift, and go to state 34
    BOOLEAN     shift, and go to state 35
    IDENTIFIER  shift, and go to state 36
    INTEGER     shift, and go to state 37
    STRING      shift, and go to state 38
    FLOAT       shift, and go to state 39

    term     go to state 160
    literal  go to state 42


State 123

   14 binary_op: expression LOGICAL_OR • term

    LPAREN      shift, and go to state 34
    BOOLEAN     shift, and go to state 35
    IDENTIFIER  shift, and go to state 36
    INTEGER     shift, and go to state 37
    STRING      shift, and go to state 38
    FLOAT       shift, and go to state 39

    term     go to state 161
    literal  go to state 42


State 124

   11 term: LPAREN expression RPAREN •

    $default  reduce using rule 11 (term)


State 125

   70 boolean_exp: term EQUAL_EQUAL term •

    $default  reduce using rule 70 (boolean_exp)


State 126

   71 boolean_exp: term NOT_EQUAL term •

    $default  reduce using rule 71 (boolean_exp)


State 127

   74 boolean_exp: term LESS_THAN term •

    $default  reduce using rule 74 (boolean_exp)


State 128

   72 boolean_exp: term LESS_THAN_OR_EQUAL term •

    $default  reduce using rule 72 (boolean_exp)


State 129

   75 boolean_exp: term GREATER_THAN term •

    $default  reduce using rule 75 (boolean_exp)


State 130

   73 boolean_exp: term GREATER_THAN_OR_EQUAL term •

    $default  reduce using rule 73 (boolean_exp)


State 131

   69 boolean_exp: term LOGICAL_AND term •

    $default  reduce using rule 69 (boolean_exp)


State 132

   68 boolean_exp: term LOGICAL_OR term •

    $default  reduce using rule 68 (boolean_exp)


State 133

   77 if_stmt: IF boolean_exp block_stmt ELSE • if_stmt
   78        | IF boolean_exp block_stmt ELSE • block_stmt

    IF      shift, and go to state 13
    LBRACE  shift, and go to state 11

    block_stmt  go to state 162
    if_stmt     go to state 163


State 134

   89 for_clause: assignment SEMICOLON boolean_exp • SEMICOLON simple_stmt

    SEMICOLON  shift, and go to state 164


State 135

   82 switch_case: CASE • expression_list ':' statement_list

    LPAREN      shift, and go to state 34
    BOOLEAN     shift, and go to state 35
    IDENTIFIER  shift, and go to state 36
    INTEGER     shift, and go to state 37
    STRING      shift, and go to state 38
    FLOAT       shift, and go to state 39

    term             go to state 81
    expression       go to state 165
    binary_op        go to state 83
    expression_list  go to state 166
    literal          go to state 42


State 136

   83 switch_case: DEFAULT • ':' statement_list

    ':'  shift, and go to state 167


State 137

   79 switch_stmt: SWITCH simple_stmt '{' switch_cases • '}'
   81 switch_cases: switch_cases • switch_case

    CASE     shift, and go to state 135
    DEFAULT  shift, and go to state 136
    '}'      shift, and go to state 168

    switch_case  go to state 169


State 138

   80 switch_cases: switch_case •

    $default  reduce using rule 80 (switch_cases)


State 139

    5 declaration: VAR IDENTIFIER ASSIGN expression •
   14 binary_op: expression • LOGICAL_OR term
   15          | expression • LOGICAL_AND term
   16          | expression • EQUAL_EQUAL term
   17          | expression • NOT_EQUAL term
   18          | expression • LESS_THAN_OR_EQUAL term
   19          | expression • GREATER_THAN_OR_EQUAL term
   20          | expression • LESS_THAN term
   21          | expression • GREATER_THAN term
   22          | expression • PLUS term
   23          | expression • MINUS term
   24          | expression • BITWISE_OR term
   25          | expression • BITWISE_XOR term
   26          | expression • TIMES term
   27          | expression • DIVIDE term
   28          | expression • MODULO term
   29          | expression • RIGHT_SHIFT term
   30          | expression • LEFT_SHIFT term
   31          | expression • BITWISE_AND term
   32          | expression • BIT_CLEAR term

    PLUS                   shift, and go to state 105
    MINUS                  shift, and go to state 106
    TIMES                  shift, and go to state 107
    DIVIDE                 shift, and go to state 108
    MODULO                 shift, and go to state 109
    BITWISE_AND            shift, and go to state 110
    BITWISE_OR             shift, and go to state 111
    BITWISE_XOR            shift, and go to state 112
    BIT_CLEAR              shift, and go to state 113
    LEFT_SHIFT             shift, and go to state 114
    RIGHT_SHIFT            shift, and go to state 115
    EQUAL_EQUAL            shift, and go to state 116
    NOT_EQUAL              shift, and go to state 117
    LESS_THAN              shift, and go to state 118
    LESS_THAN_OR_EQUAL     shift, and go to state 119
    GREATER_THAN           shift, and go to state 120
    GREATER_THAN_OR_EQUAL  shift, and go to state 121
    LOGICAL_AND            shift, and go to state 122
    LOGICAL_OR             shift, and go to state 123

    $default  reduce using rule 5 (declaration)


State 140

    4 declaration: VAR IDENTIFIER type ASSIGN • expression

    LPAREN      shift, and go to state 34
    BOOLEAN     shift, and go to state 35
    IDENTIFIER  shift, and go to state 36
    INTEGER     shift, and go to state 37
    STRING      shift, and go to state 38
    FLOAT       shift, and go to state 39

    term        go to state 81
    expression  go to state 170
    binary_op   go to state 83
    literal     go to state 42


State 141

   90 println_stmt: PRINTLN LPAREN IDENTIFIER RPAREN •

    $default  reduce using rule 90 (println_stmt)


State 142

   91 println_stmt: PRINTLN LPAREN STRING RPAREN •

    $default  reduce using rule 91 (println_stmt)


State 143

   22 binary_op: expression PLUS term •

    $default  reduce using rule 22 (binary_op)


State 144

   23 binary_op: expression MINUS term •

    $default  reduce using rule 23 (binary_op)


State 145

   26 binary_op: expression TIMES term •

    $default  reduce using rule 26 (binary_op)


State 146

   27 binary_op: expression DIVIDE term •

    $default  reduce using rule 27 (binary_op)


State 147

   28 binary_op: expression MODULO term •

    $default  reduce using rule 28 (binary_op)


State 148

   31 binary_op: expression BITWISE_AND term •

    $default  reduce using rule 31 (binary_op)


State 149

   24 binary_op: expression BITWISE_OR term •

    $default  reduce using rule 24 (binary_op)


State 150

   25 binary_op: expression BITWISE_XOR term •

    $default  reduce using rule 25 (binary_op)


State 151

   32 binary_op: expression BIT_CLEAR term •

    $default  reduce using rule 32 (binary_op)


State 152

   30 binary_op: expression LEFT_SHIFT term •

    $default  reduce using rule 30 (binary_op)


State 153

   29 binary_op: expression RIGHT_SHIFT term •

    $default  reduce using rule 29 (binary_op)


State 154

   16 binary_op: expression EQUAL_EQUAL term •

    $default  reduce using rule 16 (binary_op)


State 155

   17 binary_op: expression NOT_EQUAL term •

    $default  reduce using rule 17 (binary_op)


State 156

   20 binary_op: expression LESS_THAN term •

    $default  reduce using rule 20 (binary_op)


State 157

   18 binary_op: expression LESS_THAN_OR_EQUAL term •

    $default  reduce using rule 18 (binary_op)


State 158

   21 binary_op: expression GREATER_THAN term •

    $default  reduce using rule 21 (binary_op)


State 159

   19 binary_op: expression GREATER_THAN_OR_EQUAL term •

    $default  reduce using rule 19 (binary_op)


State 160

   15 binary_op: expression LOGICAL_AND term •

    $default  reduce using rule 15 (binary_op)


State 161

   14 binary_op: expression LOGICAL_OR term •

    $default  reduce using rule 14 (binary_op)


State 162

   78 if_stmt: IF boolean_exp block_stmt ELSE block_stmt •

    $default  reduce using rule 78 (if_stmt)


State 163

   77 if_stmt: IF boolean_exp block_stmt ELSE if_stmt •

    $default  reduce using rule 77 (if_stmt)


State 164

   89 for_clause: assignment SEMICOLON boolean_exp SEMICOLON • simple_stmt

    IDENTIFIER  shift, and go to state 21

    simple_stmt   go to state 171
    inc_dec_stmt  go to state 26
    assignment    go to state 27


State 165

   14 binary_op: expression • LOGICAL_OR term
   15          | expression • LOGICAL_AND term
   16          | expression • EQUAL_EQUAL term
   17          | expression • NOT_EQUAL term
   18          | expression • LESS_THAN_OR_EQUAL term
   19          | expression • GREATER_THAN_OR_EQUAL term
   20          | expression • LESS_THAN term
   21          | expression • GREATER_THAN term
   22          | expression • PLUS term
   23          | expression • MINUS term
   24          | expression • BITWISE_OR term
   25          | expression • BITWISE_XOR term
   26          | expression • TIMES term
   27          | expression • DIVIDE term
   28          | expression • MODULO term
   29          | expression • RIGHT_SHIFT term
   30          | expression • LEFT_SHIFT term
   31          | expression • BITWISE_AND term
   32          | expression • BIT_CLEAR term
   84 expression_list: expression •

    PLUS                   shift, and go to state 105
    MINUS                  shift, and go to state 106
    TIMES                  shift, and go to state 107
    DIVIDE                 shift, and go to state 108
    MODULO                 shift, and go to state 109
    BITWISE_AND            shift, and go to state 110
    BITWISE_OR             shift, and go to state 111
    BITWISE_XOR            shift, and go to state 112
    BIT_CLEAR              shift, and go to state 113
    LEFT_SHIFT             shift, and go to state 114
    RIGHT_SHIFT            shift, and go to state 115
    EQUAL_EQUAL            shift, and go to state 116
    NOT_EQUAL              shift, and go to state 117
    LESS_THAN              shift, and go to state 118
    LESS_THAN_OR_EQUAL     shift, and go to state 119
    GREATER_THAN           shift, and go to state 120
    GREATER_THAN_OR_EQUAL  shift, and go to state 121
    LOGICAL_AND            shift, and go to state 122
    LOGICAL_OR             shift, and go to state 123

    $default  reduce using rule 84 (expression_list)


State 166

   82 switch_case: CASE expression_list • ':' statement_list
   85 expression_list: expression_list • ',' expression

    ':'  shift, and go to state 172
    ','  shift, and go to state 173


State 167

   83 switch_case: DEFAULT ':' • statement_list

    IF          shift, and go to state 13
    FOR         shift, and go to state 14
    SWITCH      shift, and go to state 15
    BREAK       shift, and go to state 16
    CONTINUE    shift, and go to state 17
    RETURN      shift, and go to state 18
    VAR         shift, and go to state 19
    PRINTLN     shift, and go to state 20
    LBRACE      shift, and go to state 11
    IDENTIFIER  shift, and go to state 21
    COMMENT     shift, and go to state 22

    IF          [reduce using rule 44 (statement)]
    FOR         [reduce using rule 44 (statement)]
    SWITCH      [reduce using rule 44 (statement)]
    BREAK       [reduce using rule 44 (statement)]
    CONTINUE    [reduce using rule 44 (statement)]
    RETURN      [reduce using rule 44 (statement)]
    VAR         [reduce using rule 44 (statement)]
    PRINTLN     [reduce using rule 44 (statement)]
    LBRACE      [reduce using rule 44 (statement)]
    IDENTIFIER  [reduce using rule 44 (statement)]
    COMMENT     [reduce using rule 44 (statement)]
    $default    reduce using rule 44 (statement)

    declaration     go to state 23
    statement       go to state 174
    simple_stmt     go to state 25
    inc_dec_stmt    go to state 26
    assignment      go to state 27
    return_stmt     go to state 28
    block_stmt      go to state 29
    if_stmt         go to state 30
    switch_stmt     go to state 31
    statement_list  go to state 175
    for_stmt        go to state 32
    println_stmt    go to state 33


State 168

   79 switch_stmt: SWITCH simple_stmt '{' switch_cases '}' •

    $default  reduce using rule 79 (switch_stmt)


State 169

   81 switch_cases: switch_cases switch_case •

    $default  reduce using rule 81 (switch_cases)


State 170

    4 declaration: VAR IDENTIFIER type ASSIGN expression •
   14 binary_op: expression • LOGICAL_OR term
   15          | expression • LOGICAL_AND term
   16          | expression • EQUAL_EQUAL term
   17          | expression • NOT_EQUAL term
   18          | expression • LESS_THAN_OR_EQUAL term
   19          | expression • GREATER_THAN_OR_EQUAL term
   20          | expression • LESS_THAN term
   21          | expression • GREATER_THAN term
   22          | expression • PLUS term
   23          | expression • MINUS term
   24          | expression • BITWISE_OR term
   25          | expression • BITWISE_XOR term
   26          | expression • TIMES term
   27          | expression • DIVIDE term
   28          | expression • MODULO term
   29          | expression • RIGHT_SHIFT term
   30          | expression • LEFT_SHIFT term
   31          | expression • BITWISE_AND term
   32          | expression • BIT_CLEAR term

    PLUS                   shift, and go to state 105
    MINUS                  shift, and go to state 106
    TIMES                  shift, and go to state 107
    DIVIDE                 shift, and go to state 108
    MODULO                 shift, and go to state 109
    BITWISE_AND            shift, and go to state 110
    BITWISE_OR             shift, and go to state 111
    BITWISE_XOR            shift, and go to state 112
    BIT_CLEAR              shift, and go to state 113
    LEFT_SHIFT             shift, and go to state 114
    RIGHT_SHIFT            shift, and go to state 115
    EQUAL_EQUAL            shift, and go to state 116
    NOT_EQUAL              shift, and go to state 117
    LESS_THAN              shift, and go to state 118
    LESS_THAN_OR_EQUAL     shift, and go to state 119
    GREATER_THAN           shift, and go to state 120
    GREATER_THAN_OR_EQUAL  shift, and go to state 121
    LOGICAL_AND            shift, and go to state 122
    LOGICAL_OR             shift, and go to state 123

    $default  reduce using rule 4 (declaration)


State 171

   89 for_clause: assignment SEMICOLON boolean_exp SEMICOLON simple_stmt •

    $default  reduce using rule 89 (for_clause)


State 172

   82 switch_case: CASE expression_list ':' • statement_list

    IF          shift, and go to state 13
    FOR         shift, and go to state 14
    SWITCH      shift, and go to state 15
    BREAK       shift, and go to state 16
    CONTINUE    shift, and go to state 17
    RETURN      shift, and go to state 18
    VAR         shift, and go to state 19
    PRINTLN     shift, and go to state 20
    LBRACE      shift, and go to state 11
    IDENTIFIER  shift, and go to state 21
    COMMENT     shift, and go to state 22

    IF          [reduce using rule 44 (statement)]
    FOR         [reduce using rule 44 (statement)]
    SWITCH      [reduce using rule 44 (statement)]
    BREAK       [reduce using rule 44 (statement)]
    CONTINUE    [reduce using rule 44 (statement)]
    RETURN      [reduce using rule 44 (statement)]
    VAR         [reduce using rule 44 (statement)]
    PRINTLN     [reduce using rule 44 (statement)]
    LBRACE      [reduce using rule 44 (statement)]
    IDENTIFIER  [reduce using rule 44 (statement)]
    COMMENT     [reduce using rule 44 (statement)]
    $default    reduce using rule 44 (statement)

    declaration     go to state 23
    statement       go to state 174
    simple_stmt     go to state 25
    inc_dec_stmt    go to state 26
    assignment      go to state 27
    return_stmt     go to state 28
    block_stmt      go to state 29
    if_stmt         go to state 30
    switch_stmt     go to state 31
    statement_list  go to state 176
    for_stmt        go to state 32
    println_stmt    go to state 33


State 173

   85 expression_list: expression_list ',' • expression

    LPAREN      shift, and go to state 34
    BOOLEAN     shift, and go to state 35
    IDENTIFIER  shift, and go to state 36
    INTEGER     shift, and go to state 37
    STRING      shift, and go to state 38
    FLOAT       shift, and go to state 39

    term        go to state 81
    expression  go to state 177
    binary_op   go to state 83
    literal     go to state 42


State 174

   86 statement_list: statement •

    $default  reduce using rule 86 (statement_list)


State 175

   83 switch_case: DEFAULT ':' statement_list •
   87 statement_list: statement_list • statement

    IF          shift, and go to state 13
    FOR         shift, and go to state 14
    SWITCH      shift, and go to state 15
    BREAK       shift, and go to state 16
    CONTINUE    shift, and go to state 17
    RETURN      shift, and go to state 18
    VAR         shift, and go to state 19
    PRINTLN     shift, and go to state 20
    LBRACE      shift, and go to state 11
    IDENTIFIER  shift, and go to state 21
    COMMENT     shift, and go to state 22

    IF          [reduce using rule 44 (statement)]
    FOR         [reduce using rule 44 (statement)]
    SWITCH      [reduce using rule 44 (statement)]
    CASE        reduce using rule 44 (statement)
    CASE        [reduce using rule 83 (switch_case)]
    DEFAULT     reduce using rule 44 (statement)
    DEFAULT     [reduce using rule 83 (switch_case)]
    BREAK       [reduce using rule 44 (statement)]
    CONTINUE    [reduce using rule 44 (statement)]
    RETURN      [reduce using rule 44 (statement)]
    VAR         [reduce using rule 44 (statement)]
    PRINTLN     [reduce using rule 44 (statement)]
    LBRACE      [reduce using rule 44 (statement)]
    IDENTIFIER  [reduce using rule 44 (statement)]
    COMMENT     [reduce using rule 44 (statement)]
    '}'         reduce using rule 44 (statement)
    '}'         [reduce using rule 83 (switch_case)]
    $default    reduce using rule 44 (statement)

    declaration   go to state 23
    statement     go to state 178
    simple_stmt   go to state 25
    inc_dec_stmt  go to state 26
    assignment    go to state 27
    return_stmt   go to state 28
    block_stmt    go to state 29
    if_stmt       go to state 30
    switch_stmt   go to state 31
    for_stmt      go to state 32
    println_stmt  go to state 33


State 176

   82 switch_case: CASE expression_list ':' statement_list •
   87 statement_list: statement_list • statement

    IF          shift, and go to state 13
    FOR         shift, and go to state 14
    SWITCH      shift, and go to state 15
    BREAK       shift, and go to state 16
    CONTINUE    shift, and go to state 17
    RETURN      shift, and go to state 18
    VAR         shift, and go to state 19
    PRINTLN     shift, and go to state 20
    LBRACE      shift, and go to state 11
    IDENTIFIER  shift, and go to state 21
    COMMENT     shift, and go to state 22

    IF          [reduce using rule 44 (statement)]
    FOR         [reduce using rule 44 (statement)]
    SWITCH      [reduce using rule 44 (statement)]
    CASE        reduce using rule 44 (statement)
    CASE        [reduce using rule 82 (switch_case)]
    DEFAULT     reduce using rule 44 (statement)
    DEFAULT     [reduce using rule 82 (switch_case)]
    BREAK       [reduce using rule 44 (statement)]
    CONTINUE    [reduce using rule 44 (statement)]
    RETURN      [reduce using rule 44 (statement)]
    VAR         [reduce using rule 44 (statement)]
    PRINTLN     [reduce using rule 44 (statement)]
    LBRACE      [reduce using rule 44 (statement)]
    IDENTIFIER  [reduce using rule 44 (statement)]
    COMMENT     [reduce using rule 44 (statement)]
    '}'         reduce using rule 44 (statement)
    '}'         [reduce using rule 82 (switch_case)]
    $default    reduce using rule 44 (statement)

    declaration   go to state 23
    statement     go to state 178
    simple_stmt   go to state 25
    inc_dec_stmt  go to state 26
    assignment    go to state 27
    return_stmt   go to state 28
    block_stmt    go to state 29
    if_stmt       go to state 30
    switch_stmt   go to state 31
    for_stmt      go to state 32
    println_stmt  go to state 33


State 177

   14 binary_op: expression • LOGICAL_OR term
   15          | expression • LOGICAL_AND term
   16          | expression • EQUAL_EQUAL term
   17          | expression • NOT_EQUAL term
   18          | expression • LESS_THAN_OR_EQUAL term
   19          | expression • GREATER_THAN_OR_EQUAL term
   20          | expression • LESS_THAN term
   21          | expression • GREATER_THAN term
   22          | expression • PLUS term
   23          | expression • MINUS term
   24          | expression • BITWISE_OR term
   25          | expression • BITWISE_XOR term
   26          | expression • TIMES term
   27          | expression • DIVIDE term
   28          | expression • MODULO term
   29          | expression • RIGHT_SHIFT term
   30          | expression • LEFT_SHIFT term
   31          | expression • BITWISE_AND term
   32          | expression • BIT_CLEAR term
   85 expression_list: expression_list ',' expression •

    PLUS                   shift, and go to state 105
    MINUS                  shift, and go to state 106
    TIMES                  shift, and go to state 107
    DIVIDE                 shift, and go to state 108
    MODULO                 shift, and go to state 109
    BITWISE_AND            shift, and go to state 110
    BITWISE_OR             shift, and go to state 111
    BITWISE_XOR            shift, and go to state 112
    BIT_CLEAR              shift, and go to state 113
    LEFT_SHIFT             shift, and go to state 114
    RIGHT_SHIFT            shift, and go to state 115
    EQUAL_EQUAL            shift, and go to state 116
    NOT_EQUAL              shift, and go to state 117
    LESS_THAN              shift, and go to state 118
    LESS_THAN_OR_EQUAL     shift, and go to state 119
    GREATER_THAN           shift, and go to state 120
    GREATER_THAN_OR_EQUAL  shift, and go to state 121
    LOGICAL_AND            shift, and go to state 122
    LOGICAL_OR             shift, and go to state 123

    $default  reduce using rule 85 (expression_list)


State 178

   87 statement_list: statement_list statement •

    $default  reduce using rule 87 (statement_list)
